@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

$md-primary: (50 : #e5e6f8,
  100 : #bfc0ed,
  200 : #9497e1,
  300 : #696dd4,
  400 : #484dcb,
  500 : #282ec2,
  600 : #2429bc,
  700 : #1e23b4,
  800 : #181dac,
  900 : #0f129f,
  A100 : #cfcfff,
  A200 : #9c9dff,
  A400 : #696bff,
  A700 : #4f52ff,
  contrast: (50 : #000000,
    100 : #000000,
    200 : #000000,
    300 : #ffffff,
    400 : #ffffff,
    500 : #ffffff,
    600 : #ffffff,
    700 : #ffffff,
    800 : #ffffff,
    900 : #ffffff,
    A100 : #000000,
    A200 : #000000,
    A400 : #ffffff,
    A700 : #ffffff,
  ));



// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$my-app-primary: mat-palette($md-primary); // #00305a
$my-app-accent: mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$my-app-warn: mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$my-app-theme: mat-light-theme($my-app-primary, $my-app-accent, $my-app-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($my-app-theme);

:root {
  --color-primary: #{mat-color($my-app-primary)};
  --color-accent: #{mat-color($my-app-accent)};
  --color-warn: #{mat-color($my-app-warn)};
}
